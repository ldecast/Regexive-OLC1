package Analizadores;
import java_cup.runtime.*;
import GUI.Interfaz;

parser code
{:  
    //-----------------------------------------para errores sintacticos-------------------------------------------------------------------------------------------
    public void syntax_error(Symbol s)
    {
        System.err.println("Error en la Línea " + (s.right+1) +" Columna "+(s.left+1)+ ". Identificador "+s.value + " no reconocido. Se ha recuperado del error." );
    }
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {
        System.err.println("Error en la Línea " + (s.right+1)+ " Columna "+(s.left+1)+". Identificador " +s.value + " no reconocido.");
    }
    //-------------------------------------------------------------------------------------------------------------------------------------------8
:}

action code {:
:}

terminal String prconj, pcoma, dospuntos, labre, lcierra, porcentajes, id, lexema, notacionL, notacionD, notacionA, deriva, operador, conjunto, var;

non terminal String INICIO, EXP, SENTENCIA, EXPRESION, NOTACION, CONJUNTO, INFIJA, DEF, EXPR;

start with INICIO;

INICIO::= EXP {::};

EXP::= labre SENTENCIA porcentajes EXPRESION:e lcierra {::};

SENTENCIA::= SENTENCIA CONJUNTO pcoma {::}
            | SENTENCIA INFIJA pcoma {::}
            | CONJUNTO pcoma {::}
            | INFIJA pcoma {::};

CONJUNTO ::= prconj dospuntos id deriva NOTACION {::};

NOTACION ::= notacionL {::}
            | notacionA {::}
            | notacionD {::};

INFIJA ::= id deriva DEF {::};

DEF::= DEF conjunto 
    | DEF var
    | conjunto
    | var{::};

EXPRESION::= EXPRESION id:a dospuntos lexema pcoma {:GUI.Interfaz.texto_consola+="Expresión reconocida: "+a+"\n";:}
            | id:b dospuntos lexema pcoma {:GUI.Interfaz.texto_consola+="Expresión reconocida: "+b+"\n";:};